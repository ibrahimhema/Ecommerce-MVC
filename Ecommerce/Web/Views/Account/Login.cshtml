@model BL.ViewModels.LoginViewModel
@using Web.Views.Shared
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_MainSiteLayoutView.cshtml";

    string ReturnUrl;
    if (ViewBag.ReturnUrl != null)
    {
        ReturnUrl = ViewBag.ReturnUrl;
    }

}

<div class="container" style="margin-top:3rem">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h2>Login</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RememberMe, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div>
                                @Html.EditorFor(model => model.RememberMe)
                                @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="@ResourceSite.Login" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
