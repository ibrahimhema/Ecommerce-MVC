@model BL.ViewModels.ProductViewModel

@{
    ViewBag.Title = "CreateProduct";
    Layout = "~/Views/Shared/_adminPanel.cshtml";
    SelectList selectListItems = new SelectList(ViewBag.brands, "Id", "Name");
    SelectList selectListItemsVendors = new SelectList(ViewBag.Vendors, "Id", "FirstName");
    SelectList selectListsubCategory = new SelectList(ViewBag.subCategory, "Id", "Name");
    
}

<h2>CreateProduct</h2>


<form class="form-group" method="post" enctype="multipart/form-data" id="imageForm">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">





        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="imageContainer" class="rounded-circle">
          
                <input type="file" name="imageFile" id="imageFile" accept="image/png, image/jpeg, image/jpg" class="form-control" onchange="UploadImageProduct(this)" />
           
            <img src="~/Content/Imgs/default.jpg" id="img" class="h-100 w-100" />
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Offer_Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offer_Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offer_Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vendor_User_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                  @Html.DropDownListFor(model => model.Vendor_User_id, selectListItemsVendors, new { @class = "form-control" })
              @*  @Html.EditorFor(model => model.Vendor_User_id, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Vendor_User_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sub_Cat_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @*  @Html.EditorFor(model => model.Sub_Cat_Id, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Sub_Cat_Id, selectListsubCategory, new { @class = "form-control" })
               
                @Html.ValidationMessageFor(model => model.Sub_Cat_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Brand_Id, selectListItems, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Brand_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function UploadImageProduct(fileInput) {
            var fileToUpload = fileInput.files.item(0)

            var filereader = new FileReader();
            filereader.onload = (event) => {
                document.getElementById("img").src = event.target.result;

            }
            filereader.readAsDataURL(fileToUpload)
        }




    </script>
}
